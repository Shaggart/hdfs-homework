[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 52.4997ms
[debug]       Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\Shaggart\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Shaggart\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9846 ms
[debug]           Load.resolveProject(global-plugins) took 1.2273ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Shaggart\.sbt\1.0\plugins, plugins: List(<none>))) took 3.7459ms
[debug] [Loading] Done in C:\Users\Shaggart\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 5.138ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0128ms
[debug]     Load.loadUnit(file:/C:/Users/Shaggart/.sbt/1.0/plugins/, ...) took 58.567ms
[debug]   Load.apply: load took 63.4507ms
[debug]   Load.apply: resolveProjects took 0.1293ms
[debug]   Load.apply: finalTransforms took 23.1703ms
[debug]   Load.apply: config.delegates took 0.3766ms
[debug]   Load.apply: Def.make(settings)... took 134.4686ms
[debug]   Load.apply: structureIndex took 56.0537ms
[debug]   Load.apply: mkStreams took 0.003ms
[info] loading global plugins from C:\Users\Shaggart\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2254.8575ms
[debug]           Load.loadUnit: plugins took 30.7324ms
[debug]           Load.loadUnit: defsScala took 0.0141ms
[debug] [Loading] Scanning directory C:\Users\Shaggart\Downloads\json-parsing\project
[debug]             Load.loadUnit: mkEval took 0.9012ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Shaggart\Downloads\json-parsing\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 56.1862 ms
[info] loading settings for project json-parsing-build from idea.sbt ...
[debug]               Load.resolveProject(json-parsing-build) took 105.3005ms
[debug]             Load.loadTransitive: finalizeProject(Project(id json-parsing-build, base: C:\Users\Shaggart\Downloads\json-parsing\project, plugins: List(<none>))) took 162.8049ms
[debug] [Loading] Done in C:\Users\Shaggart\Downloads\json-parsing\project, returning: (json-parsing-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 187.6928ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.9785ms
[debug]         Load.loadUnit(file:/C:/Users/Shaggart/Downloads/json-parsing/project/, ...) took 252.0692ms
[debug]       Load.apply: load took 254.8424ms
[debug]       Load.apply: resolveProjects took 0.8868ms
[debug]       Load.apply: finalTransforms took 16.2461ms
[debug]       Load.apply: config.delegates took 0.5091ms
[debug]       Load.apply: Def.make(settings)... took 112.0244ms
[debug]       Load.apply: structureIndex took 40.0178ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Shaggart\Downloads\json-parsing\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2015.6538ms
[debug]     Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Users\Shaggart\Downloads\json-parsing
[debug]       Load.loadUnit: mkEval took 0.5952ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8317 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 60.4185ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Shaggart\Downloads\json-parsing, plugins: List(<none>))) took 62.8046ms
[debug] [Loading] Done in C:\Users\Shaggart\Downloads\json-parsing, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 183.1077ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.1304ms
[debug]   Load.loadUnit(file:/C:/Users/Shaggart/Downloads/json-parsing/, ...) took 2215.6928ms
[debug] Load.apply: load took 2217.0454ms
[debug] Load.apply: resolveProjects took 0.1079ms
[debug] Load.apply: finalTransforms took 28.4232ms
[debug] Load.apply: config.delegates took 0.3488ms
[debug] Load.apply: Def.make(settings)... took 104.166ms
[debug] Load.apply: structureIndex took 36.9859ms
[debug] Load.apply: mkStreams took 0.0057ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to json parsing (in build file:/C:/Users/Shaggart/Downloads/json-parsing/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
